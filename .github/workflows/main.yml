name: CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6]
        connector:
          - pyodbc
    steps:

    - name: Print ref 3
      run: echo ${{ github.event.ref }}

    - name: Print event
      run: echo ${{ github.event }}    

    - name: Fetch repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch all tags
      run: git fetch origin +refs/tags/*:refs/tags/*

    - name: Setup Python 3.6 for integration-test-docker-environment
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
      if: ${{ matrix.python != 3.6 }}

    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install via apt
      run: sudo apt-get install unixodbc unixodbc-dev libboost-date-time-dev libboost-locale-dev libboost-system-dev

    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1

    - name: Pip install requirements
      uses: BSFishy/pip-action@v1
      with:
        requirements: requirements.txt

    - name: Pip install test requirements
      uses: BSFishy/pip-action@v1
      with:
        requirements: requirements_test.txt

    - name: Pip install extra requirements
      uses: BSFishy/pip-action@v1
      with:
        requirements: requirements_extras.txt
      if: ${{ matrix.connector == 'turbodbc' }}

    - name: Install Wheel
      run: pip install wheel

    - name: Checkout test environment
      run: git clone https://github.com/exasol/integration-test-docker-environment.git
      working-directory: .. 

    - name: Add TEST_SCHEMA to test DDL
      run: echo "CREATE SCHEMA TEST_SCHEMA;" >> tests/test/enginedb_small/schema.sql
      working-directory: ../integration-test-docker-environment

    - name: Add TEST_SCHEMA_2 to test DDL
      run: echo "CREATE SCHEMA TEST_SCHEMA_2;" >> tests/test/enginedb_small/schema.sql
      working-directory: ../integration-test-docker-environment

    - name: Run git status
      run: git status

    - name: PWD directory
      run: pwd
      working-directory: .. 

    - name: Build sdist and wheel packages
      run: python setup.py sdist bdist_wheel

    - name: Push package to Test Pypi
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
